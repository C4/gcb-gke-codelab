steps:
# Pull the previously built image to use for --cache-from build
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest']
# Build the new image. Tag with latest to pull for next build.
# Tag with $BUILD_ID to create unique tag for k8s cluster to pull 
- name: 'gcr.io/cloud-builders/docker'
  args: [ 
    'build', 
    '--cache-from', 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest', 
    '-t', 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest',
    '-t', 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:$BUILD_ID', 
    '.' 
  ]
# Replace the image in the k8s Deployment
- name: 'ubuntu'
  args: [ 
    'sed', '-i',
    's|gcr.io/$PROJECT_ID/$_IMAGE_NAME:.*|gcr.io/$PROJECT_ID/$_IMAGE_NAME:$BUILD_ID|g', 
    'k8s.yml'
  ]
# Apply change
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'k8s.yml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
  - 'CLOUDSDK_CONTAINER_CLUSTER=gcb-demo'
# Push image to GCR
images:
- 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:$BUILD_ID'
